---
# Task that will be used to Launch/Create an EC2 Instance

- include_vars: "defaults/main.yml"
  tags: create

- name: Create a security group
  local_action:
    module: ec2_group
    name: "{{ ansible_role_ec2.security_group }}"
    description: Security Group for {{ ansible_role_ec2.security_group }}
    region: "{{ ansible_role_ec2.region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 3306
        to_port: 3306
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags: create

- name: Launch the new EC2 Instance
  local_action:
    module: ec2
    group: "{{ ansible_role_ec2.security_group }}"
    instance_type: "{{ ansible_role_ec2.instance_type }}"
    image: "{{ ansible_role_ec2.image }}"
    wait: true
    region: "{{ ansible_role_ec2.region }}"
    keypair: "{{ ansible_role_ec2.keypair }}"
    count: "{{ ansible_role_ec2.count }}"
# Only us the following if we want an EBS volume mounted
#    volumes:
#      - device_name: /dev/sda1
#        device_type: gp2
#        volume_size: 32
  register: ec2
  tags: create

- debug: var=ec2
  tags: create

# 52.62.23.106 ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/.ssh/aws.pem
- name: Remove any previously created EC2 instance(s) from the host group
  local_action: lineinfile
                dest="./ansible/hosts"
                regexp='^[\d\.]+ ansible_ssh_user='
                state=absent
  with_items: "{{ ec2.instances }}"
  tags: create

- name: Add the newly created EC2 instance(s) to the host group
  local_action: lineinfile
                dest="./ansible/hosts"
                regexp='^'
                insertafter="\[{{ site.name }}\]"
                line="[{{ site.name }}]\n{{ item.public_ip }} ansible_user={{ ansible_role_ec2.image_user }} ansible_private_key_file={{ ansible_role_ec2.private_key }}"
  with_items: "{{ ec2.instances }}"
  tags: create

- name: Wait for SSH to come up
  local_action: wait_for
                host={{ item.public_ip }}
                port=22
                state=started
  with_items: "{{ ec2.instances }}"
  tags: create

- name: Add tag to Instance(s)
  local_action: ec2_tag
                resource={{ item.id }}
                region={{ ansible_role_ec2.region }}
                state=present
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Name: "build-{{ site.name }}"
  tags: create

#- name: Attach a volume to the EC2 Instance
#  local_action: ec2_vol
#                instance="{{ item.id }}"
#                volume_size=10
#                device_name=sdd
#  with_items: "{{ ec2.instances }}"
#  tags: create
